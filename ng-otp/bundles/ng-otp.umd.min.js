!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("rxjs"),require("rxjs/operators"),require("@angular/core"),require("@angular/forms"),require("@angular/platform-browser")):"function"==typeof define&&define.amd?define("ng-otp",["exports","rxjs","rxjs/operators","@angular/core","@angular/forms","@angular/platform-browser"],e):e(t["ng-otp"]={},t.rxjs,t.rxjs.operators,t.ng.core,t.ng.forms,t.ng.platformBrowser)}(this,function(t,o,n,i,r,e){"use strict";var s=(p.prototype.isEmptySting=function(t){return""===t},p.prototype.isLastInput=function(t,e){return t===e},p.prototype.getElement=function(t){return document.querySelector("#otp-"+t)},p.decorators=[{type:i.Injectable,args:[{providedIn:"root"}]}],p.ctorParameters=function(){return[]},p.ngInjectableDef=i.defineInjectable({factory:function(){return new p},token:p,providedIn:"root"}),p);function p(){}var u=(c.prototype.setFormBuilder=function(){var e=this;this.otpForm=this.formBuilder.group({}),this.limitArray=Array.from(Array(this.limit).keys()),this.limitArray.map(function(t){e.otpForm.addControl("otp-"+t,new r.FormControl("",r.Validators.required))})},c.prototype.changeFocus=function(t){var e=this.ngOtpService.getElement(t);t&&this.ngOtpService.isEmptySting(e.value)?this.moveBackward(t):this.ngOtpService.isLastInput(t,this.limit-1)?e.select():this.ngOtpService.isEmptySting(e.value)||this.moveForward(t),this.otpOut.emit(Object.values(this.otpForm.value).join(""))},c.prototype.moveForward=function(t){this.ngOtpService.getElement(t+1).focus()},c.prototype.moveBackward=function(t){this.ngOtpService.getElement(t-1).focus()},c.prototype.onFocus=function(t){this.ngOtpService.getElement(t).select()},c.prototype.ngOnDestroy=function(){this.subscription.unsubscribe()},c.decorators=[{type:i.Component,args:[{selector:"ng-otp",template:'<div [formGroup]="otpForm">\n  <input type="tel" class="example-input" maxlength="1" id="otp-{{i}}"\n          *ngFor="let control of limitArray; let i = index"\n          (keyup)="changeFocus$.next(i)" (focusin)="onFocus(i)"\n          formControlName="otp-{{i}}">\n</div>',styles:[".example-input::-moz-selection{background:#fff}.example-input::selection{background:#fff}"]}]}],c.ctorParameters=function(){return[{type:r.FormBuilder},{type:s}]},c.propDecorators={limit:[{type:i.Input}],otpOut:[{type:i.Output}]},c);function c(t,e){var r=this;this.formBuilder=t,this.ngOtpService=e,this.limit=4,this.otpOut=new i.EventEmitter,this.limitArray=[],this.changeFocus$=new o.Subject,this.subscription=new o.Subscription,this.setFormBuilder(),this.subscription.add(this.changeFocus$.pipe(n.throttleTime(100)).subscribe(function(t){r.changeFocus(t)}))}var a=(l.decorators=[{type:i.NgModule,args:[{declarations:[u],imports:[e.BrowserModule,r.ReactiveFormsModule],exports:[u]}]}],l);function l(){}t.NgOtpService=s,t.NgOtpComponent=u,t.NgOtpModule=a,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ng-otp.umd.min.js.map