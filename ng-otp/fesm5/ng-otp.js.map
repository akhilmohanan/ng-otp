{"version":3,"file":"ng-otp.js.map","sources":["ng://ng-otp/lib/ng-otp.service.ts","ng://ng-otp/lib/ng-otp.component.ts","ng://ng-otp/lib/ng-otp.module.ts"],"sourcesContent":["import { Injectable, ElementRef } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgOtpService {\n\n  constructor() { }\n\n  isEmptySting(string: string) {\n    return string === '';\n  }\n\n  isLastInput(index, limit) {\n    return index === limit;\n  }\n\n  getElement(index) {\n    return document.querySelector<HTMLInputElement>(`#otp-${index}`);\n  }\n}\n","import { Component, Input, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { NgOtpService } from './ng-otp.service';\nimport { Subject, Subscription } from 'rxjs';\nimport { throttleTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'ng-otp',\n  templateUrl: './ng-otp.component.html',\n  styleUrls: ['./ng-otp.component.scss']\n})\nexport class NgOtpComponent implements OnDestroy {\n\n  @Input() limit = 4;\n  @Output() otpOut = new EventEmitter();\n\n  otpForm: FormGroup;\n  limitArray = [];\n  changeFocus$ = new Subject();\n  subscription = new Subscription();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private ngOtpService: NgOtpService\n  ) {\n    this.setFormBuilder();\n    this.subscription.add(this.changeFocus$\n      .pipe(\n        throttleTime(100)\n      ).subscribe(\n        (index: number) => { this.changeFocus(index); }\n      )\n    );\n  }\n\n  setFormBuilder() {\n    this.otpForm = this.formBuilder.group({});\n    this.limitArray = Array.from(Array(this.limit).keys());\n    this.limitArray.map((element) => {\n      this.otpForm.addControl(`otp-${element}`, new FormControl('', Validators.required));\n    });\n  }\n\n  changeFocus(id: number) {\n    const currentElement: HTMLInputElement = this.ngOtpService.getElement(id);\n    if (id && this.ngOtpService.isEmptySting(currentElement.value)) {\n      this.moveBackward(id);\n    } else if (this.ngOtpService.isLastInput(id, this.limit - 1)) {\n      currentElement.select();\n    } else if (!this.ngOtpService.isEmptySting(currentElement.value)) {\n      this.moveForward(id);\n    }\n    this.otpOut.emit(Object.values(this.otpForm.value).join(''));\n  }\n\n  moveForward(id: number) {\n    const nextElement: HTMLInputElement = this.ngOtpService.getElement(id + 1);\n    nextElement.focus();\n  }\n\n  moveBackward(id: number) {\n    const nextElement: HTMLInputElement = this.ngOtpService.getElement(id - 1);\n    nextElement.focus();\n  }\n\n  onFocus(id) {\n    const currentElement: HTMLInputElement = this.ngOtpService.getElement(id);\n    currentElement.select();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgOtpComponent } from './ng-otp.component';\n\nimport {ReactiveFormsModule} from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n  declarations: [NgOtpComponent],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule\n  ],\n  exports: [NgOtpComponent]\n})\nexport class NgOtpModule { }\n"],"names":[],"mappings":"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"}
